{"version":3,"sources":["components/topBar.js","components/gameBoard.js","components/pokemonCard.js","components/Header.js","App.js","index.js"],"names":["TopBar","props","react_default","a","createElement","className","href","src","width","height","alt","score","Gameboard","children","PokemonCard","name","image","onClick","checkClicked","id","Header","App","state","pokemonList","pokemon","unclickedList","shuffleOrder","array","_this","console","log","i","length","j","Math","floor","random","_ref","setState","gameReset","alert","checkOnClick","reducedUnclickedList","filter","element","_this2","this","topBar","components_Header","gameBoard","map","components_pokemonCard","Object","assign","key","reset","shuffle","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"ijCAmBeA,MAjBf,SAAgBC,GACZ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2CACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeC,KAAK,KAC7BJ,EAAAC,EAAAC,cAAA,OAAKG,IAAI,iCAAiCC,MAAM,KAAKC,OAAO,KAAKJ,UAAU,2BAA2BK,IAAI,gBAD9G,eAIAR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,UACYJ,EAAMU,WCFvBC,MARf,SAAmBX,GACf,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACVJ,EAAMY,kBCSRC,MAZf,SAAqBb,GACjB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKM,IAAKT,EAAMc,KAAMR,IAAKN,EAAMe,MAAOC,QAAS,kBAAMhB,EAAMiB,aAAajB,EAAMkB,WCMrFC,MAZf,WACI,OACIlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,0BACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,iDACAH,EAAAC,EAAAC,cAAA,yECuDLiB,6MAvDbC,MAAQ,CACNC,YAAaC,EACbb,MAAO,EACPc,cAAeD,KAGjBE,aAAe,WACb,IAAIC,EAAQC,EAAKN,MAAMC,YACvBM,QAAQC,IAAIF,EAAKN,MAAMC,aAEvB,IAAK,IAAIQ,EAAIJ,EAAMK,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAWL,EAAG,IADCM,EAElB,CAACV,EAAMM,GAAIN,EAAMI,IAAvCJ,EAAMI,GAFkCM,EAAA,GAE9BV,EAAMM,GAFwBI,EAAA,GAI3CT,EAAKU,SAAS,CAACf,YAAaI,IAC5BE,QAAQC,IAAIF,EAAKN,MAAMC,gBAGzBgB,UAAY,WACVC,MAAM,4CACNZ,EAAKU,SAAS,CAAEb,cAAeD,EAASb,MAAO,OAGjD8B,aAAe,SAACtB,GACd,IAAMuB,EAAuBd,EAAKN,MAAMG,cAAckB,OAAO,SAACC,GAAD,OAAaA,EAAQzB,KAAOA,IAErFS,EAAKN,MAAMG,cAAcO,SAAWU,EAAqBV,OAC3DJ,EAAKU,SAAS,CAAEb,cAAeiB,EAAsB/B,MAAOiB,EAAKN,MAAMX,MAAQ,IAE/EiB,EAAKW,YAEPX,EAAKF,wFAGE,IAAAmB,EAAAC,KACP,OACE5C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2C,EAAD,CAAQpC,MAAOmC,KAAKxB,MAAMX,QAC1BT,EAAAC,EAAAC,cAAC4C,EAAD,MACA9C,EAAAC,EAAAC,cAAC6C,EAAD,KACGH,KAAKxB,MAAMC,YAAY2B,IACtB,SAACN,GAAD,OACE1C,EAAAC,EAAAC,cAAC+C,EAADC,OAAAC,OAAA,CACEC,IAAKV,EAAQzB,IACTyB,EAFN,CAGE1B,aAAc2B,EAAKJ,aACnBc,MAAOV,EAAKN,UACZiB,QAASX,EAAKnB,2BAjDZ+B,aCHlBC,IAASC,OAAOzD,EAAAC,EAAAC,cAACwD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.660f8838.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction TopBar(props) {\r\n    return (\r\n        <nav className=\"navbar navbar-light bg-light sticky-top\">\r\n            <a className=\"navbar-brand\" href=\"/\">\r\n                <img src=\"/assets/images/PremierBall.png\" width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"PremierBall\" />\r\n                PokeClicker\r\n            </a>\r\n            <div className=\"row justify-content-end\">\r\n                <div className='col'>\r\n                    <span className=\"navbar-text\">\r\n                        Score: {props.score}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nexport default TopBar;","import React from 'react';\r\n\r\nfunction Gameboard(props) {\r\n    return (\r\n        <div className='container'>\r\n            <div className='row'>\r\n                {props.children}\r\n            </div>\r\n        </div>);\r\n}\r\nexport default Gameboard;","import React from \"react\";\r\nimport '../pokemonCard.css';\r\n\r\nfunction PokemonCard(props) {\r\n    return (\r\n        <div className='col-3'>\r\n            <div className=\"card\">\r\n                <div className=\"img-container\">\r\n                    <img alt={props.name} src={props.image} onClick={() => props.checkClicked(props.id)} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PokemonCard;\r\n","import React from 'react';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"jumbotron jumbotron-fluid\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"display-4\">Welcome to PokeClicker</h1>\r\n                    <p className=\"lead\">Try to click each pokemon once and once only!</p>\r\n                    <p>After Each click they will shuffle around so be careful.</p>\r\n                </div>\r\n            </div>\r\n        </div>);\r\n}\r\nexport default Header;","import React, { Component } from 'react';\nimport pokemon from './pokemon.json';\nimport TopBar from './components/topBar';\nimport Gameboard from './components/gameBoard';\nimport PokemonCard from './components/pokemonCard';\nimport Header from './components/Header';\n\nclass App extends Component {\n\n  state = {\n    pokemonList: pokemon,\n    score: 0,\n    unclickedList: pokemon\n  };\n\n  shuffleOrder = () => {\n    let array = this.state.pokemonList;\n    console.log(this.state.pokemonList);\n\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random()* (i +1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    this.setState({pokemonList: array})\n    console.log(this.state.pokemonList);\n  };\n\n  gameReset = () => {\n    alert('You already clicked that one, try again!');\n    this.setState({ unclickedList: pokemon, score: 0 });\n  }\n\n  checkOnClick = (id) => {\n    const reducedUnclickedList = this.state.unclickedList.filter((element) => element.id !== id);\n\n    if (this.state.unclickedList.length !== reducedUnclickedList.length) {\n      this.setState({ unclickedList: reducedUnclickedList, score: this.state.score + 1 });\n    } else {\n      this.gameReset();\n    };\n    this.shuffleOrder();\n  }\n\n  render() {\n    return (\n      <div>\n        <TopBar score={this.state.score} />\n        <Header />\n        <Gameboard>\n          {this.state.pokemonList.map(\n            (element) =>\n              <PokemonCard\n                key={element.id}\n                {...element}\n                checkClicked={this.checkOnClick}\n                reset={this.gameReset}\n                shuffle={this.shuffleOrder} />\n          )}\n        </Gameboard>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}